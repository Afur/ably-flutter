import 'package:ably_test_flutter_oldskool_plugin/src/ably.dart' as impl;

Future<String> get platformVersion async => impl.platformVersion;
Future<String> get version async => impl.version;

abstract class Connection {
}

abstract class Channels {
}

abstract class Realtime {
  static Future<Realtime> create(final ClientOptions options) => impl.Realtime.create(options);

  Realtime(this.connection, this.channels);

  final Connection connection;
  final Channels channels;

  void connect();
  void close();
}

/// Java: io.ably.lib.rest.Auth.TokenDetails
class AuthTokenDetails {
  String token;
  int expires;
  int issued;
  String capability;
  String clientId;
}

/// Java: io.ably.lib.rest.Auth.TokenParams
class AuthTokenParams {
  int ttl;
  String capability;
  String clientId;
  int timestamp;
}

/// Function-type alias implemented by a function that provides either tokens,
/// or signed token requests, in response to a request with given token params.
/// 
/// Java: io.ably.lib.rest.Auth.TokenCallback.getTokenRequest(TokenParams)
typedef dynamic AuthCallback(AuthTokenParams params);

/// Java: io.ably.lib.rest.Auth.AuthOptions
class AuthOptions {
  AuthCallback authCallback;
  String authUrl;
  String authMethod;
  String key;
  AuthTokenDetails tokenDetails;
  Map<String, String> authHeaders;
  Map<String, String> authParams;
  bool queryTime;
  bool useAuthToken;
}

/// Java: io.ably.lib.http.HttpAuth.Type
enum HttpAuthType {
  BASIC,
  DIGEST,
  X_ABLY_TOKEN,
}

/// Java: io.ably.lib.types.ProxyOptions
class ProxyOptions {
  String host;
  int port;
  String username;
  String password;
  List<String> nonProxyHosts;
  HttpAuthType prefAuthType;
}

/// Java: io.ably.lib.transport.Defaults
abstract class TransportDefaults {
  static const int HTTP_ASYNC_THREADPOOL_SIZE = 64;
}

/// An exception generated by the client library SDK called by this plugin.
class LibraryException implements Exception {
}

typedef LogHandler(int severity, String tag, String message, LibraryException exception);

/// Java: io.ably.lib.rest.Auth.TokenParams
class ClientOptions extends AuthOptions {
  String clientId;
  int logLevel;
  LogHandler logHandler;
  bool tls;
  String restHost;
  String realtimeHost;
  int port;
  int tlsPort;
  bool autoConnect;
  bool useBinaryProtocol;
  bool queueMessages;
  bool echoMessages;
  String recover;
  ProxyOptions proxy;
  String environment;
  bool idempotentRestPublishing;
  int httpOpenTimeout;
  int httpRequestTimeout;
  int httpMaxRetryCount;
  int realtimeRequestTimeout;
  List<String> fallbackHosts;
  bool fallbackHostsUseDefault;
  int fallbackRetryTimeout;
  AuthTokenParams defaultTokenParams;
  int channelRetryTimeout;
  Map<String, String> transportParams;
  int asyncHttpThreadpoolSize;
  bool pushFullWait;
}
